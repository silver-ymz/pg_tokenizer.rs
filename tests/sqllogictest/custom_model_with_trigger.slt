statement ok
BEGIN;

statement ok
CREATE TABLE documents (
    id SERIAL PRIMARY KEY,
    passage TEXT,
    embedding INT[]
);

statement ok
SELECT tokenizer_catalog.create_text_analyzer('text_analyzer1', $$
pre_tokenizer = "unicode_segmentation"
[[character_filters]]
to_lowercase = {}
[[character_filters]]
unicode_normalization = "nfkd"
[[token_filters]]
skip_non_alphanumeric = {}
[[token_filters]]
stopwords = "nltk_english"
[[token_filters]]
stemmer = "english_porter2"
$$);

statement ok
SELECT tokenizer_catalog.create_custom_model_tokenizer_and_trigger(
    tokenizer_name => 'tokenizer1',
    model_name => 'model1',
    text_analyzer_name => 'text_analyzer1',
    table_name => 'documents',
    source_column => 'passage',
    target_column => 'embedding'
);

statement ok
INSERT INTO documents (passage) VALUES 
('PostgreSQL is a powerful, open-source object-relational database system. It has over 15 years of active development.'),
('Full-text search is a technique for searching in plain-text documents or textual database fields. PostgreSQL supports this with tsvector.'),
('BM25 is a ranking function used by search engines to estimate the relevance of documents to a given search query.'),
('PostgreSQL provides many advanced features like full-text search, window functions, and more.'),
('Search and ranking in databases are important in building effective information retrieval systems.'),
('The BM25 ranking algorithm is derived from the probabilistic retrieval framework.'),
('Full-text search indexes documents to allow fast text queries. PostgreSQL supports this through its GIN and GiST indexes.'),
('The PostgreSQL community is active and regularly improves the database system.'),
('Relational databases such as PostgreSQL can handle both structured and unstructured data.'),
('Effective search ranking algorithms, such as BM25, improve search results by understanding relevance.');

query T
SELECT embedding FROM documents ORDER BY id;
----
{2,10,3,7,4,8,6,12,5,9,1,11}
{18,23,19,21,19,22,23,17,14,6,15,2,16,13}
{26,29,32,31,19,33,28,27,17,25,19,30}
{2,39,38,37,35,36,18,23,19,34,32}
{19,29,6,42,44,40,43,41,12}
{26,29,46,45,47,41,48}
{18,23,19,53,17,50,51,23,30,2,16,49,52,53}
{2,56,1,55,57,6,12}
{8,6,2,60,58,59,61}
{40,19,29,46,26,57,19,62,63,27}
